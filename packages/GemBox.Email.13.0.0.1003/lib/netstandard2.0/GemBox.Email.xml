<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GemBox.Email</name>
  </assembly>
  <members>
    <member name="T:GemBox.Email.Attachment">
      <summary>
            Represents a mail message attachment.
            </summary>
    </member>
    <member name="M:GemBox.Email.Attachment.#ctor(GemBox.Email.Mime.MediaType,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Attachment" /> class with specified content type and content.
            </summary>
      <param name="contentType">The Content-Type header value.</param>
      <param name="content">The content.</param>
      <exception cref="T:System.ArgumentException">
            Content is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Attachment.#ctor(GemBox.Email.Mime.MediaType,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Attachment" /> class with specified content type and content.
            </summary>
      <param name="contentType">The Content-Type header value.</param>
      <param name="content">The content.</param>
      <exception cref="T:System.ArgumentException">
            Content is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Attachment.#ctor(GemBox.Email.Mime.MediaType,System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Attachment" /> class with specified content type, content and file name.
            </summary>
      <param name="contentType">The Content-Type header value.</param>
      <param name="content">The content.</param>
      <param name="fileName">File name.</param>
      <exception cref="T:System.ArgumentException">
            Content is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Attachment.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Attachment" /> class with specified content and file name.
            </summary>
      <param name="content">The content.</param>
      <param name="fileName">File name.</param>
      <exception cref="T:System.ArgumentException">
            Content is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Attachment.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Attachment" /> class from specified file.
            </summary>
      <param name="filePath">A relative or absolute path for the file.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Attachment.Data">
      <summary>
            Gets the attachment data stream.
            </summary>
    </member>
    <member name="P:GemBox.Email.Attachment.DispositionType">
      <summary>
            Gets the attachment content disposition type.
            </summary>
      <exception cref="T:System.ArgumentException">
            Content disposition type cannot be set to <see cref="F:GemBox.Email.Mime.ContentDispositionType.Unknown" />.
            </exception>
    </member>
    <member name="P:GemBox.Email.Attachment.FileName">
      <summary>
            Gets the file name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Attachment.MimeEntity">
      <summary>
            Gets the underlying MIME entity.
            </summary>
    </member>
    <member name="P:GemBox.Email.Attachment.Size">
      <summary>
            Gets the data size.
            </summary>
    </member>
    <member name="T:GemBox.Email.AttachmentCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Email.MailMessage" /> attachments.
            </summary>
    </member>
    <member name="M:GemBox.Email.AttachmentCollection.Add(GemBox.Email.Attachment)">
      <summary>
            Adds the specified <see cref="T:GemBox.Email.Attachment" /> item.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Attachment" /> item.</param>
      <exception cref="T:System.ArgumentNullException">
            Item is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Collection already contains <see cref="T:GemBox.Email.Attachment" /> item.
            </exception>
    </member>
    <member name="M:GemBox.Email.AttachmentCollection.Clear">
      <summary>
            Removes all the items from this <see cref="T:GemBox.Email.AttachmentCollection" /></summary>
    </member>
    <member name="M:GemBox.Email.AttachmentCollection.Contains(GemBox.Email.Attachment)">
      <summary>
            Determines whether this <see cref="T:GemBox.Email.AttachmentCollection" /> contains the specified <see cref="T:GemBox.Email.Attachment" /> item.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Attachment" /> item.</param>
      <returns>
        <c>True</c> if <see cref="T:GemBox.Email.Attachment" /> item is found; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.AttachmentCollection.CopyTo(GemBox.Email.Attachment[],System.Int32)">
      <summary>
            Copies this <see cref="T:GemBox.Email.AttachmentCollection" /> or a portion of it to an array.
            </summary>
      <param name="array">The one-dimensional <see cref="T:GemBox.Email.Attachment" /> array that is the destination of the items copied from this <see cref="T:GemBox.Email.AttachmentCollection" />.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:GemBox.Email.AttachmentCollection.Count">
      <summary>
            Gets the count.
            </summary>
    </member>
    <member name="P:GemBox.Email.AttachmentCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Email.Attachment" /> at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>
            The <see cref="T:GemBox.Email.Attachment" /> at the specified index.
            </returns>
    </member>
    <member name="M:GemBox.Email.AttachmentCollection.Remove(GemBox.Email.Attachment)">
      <summary>
            Removes the specified <see cref="T:GemBox.Email.Attachment" /> item.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Attachment" /> item.</param>
      <returns>
        <c>True</c> if item is successfully removed; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:GemBox.Email.ComponentInfo">
      <summary>
            Contains static licensing methods and diagnostic information about executing GemBox.Email assembly. 
            </summary>
    </member>
    <member name="E:GemBox.Email.ComponentInfo.FreeLimitReached">
      <summary>
            Occurs when GemBox.Email assembly is used with <b>FREE-LIMITED-KEY</b> license key and free limit is reached.
            </summary>
    </member>
    <member name="P:GemBox.Email.ComponentInfo.FullVersion">
      <summary>
            Gets GemBox.Email assembly full version.
            </summary>
    </member>
    <member name="M:GemBox.Email.ComponentInfo.SetLicense(System.String)">
      <summary>
            Sets the license (serial) key.
            </summary>
      <param name="serialKey">The serial key.</param>
    </member>
    <member name="P:GemBox.Email.ComponentInfo.Title">
      <summary>
            GemBox.Email assembly title.
            </summary>
    </member>
    <member name="T:GemBox.Email.FreeLimitEventArgs">
      <summary>
            Provides data for the <see cref="E:GemBox.Email.ComponentInfo.FreeLimitReached" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Email.FreeLimitEventArgs.FreeLimitReachedAction">
      <summary>
            Gets or sets the choice for proceeding when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Email.FreeLimitReachedAction">
      <summary>
            Type of action that can be chosen when free limit is reached.
            </summary>
    </member>
    <member name="F:GemBox.Email.FreeLimitReachedAction.ThrowException">
      <summary>
            Throw <see cref="T:GemBox.Email.FreeLimitReachedException" />.
            </summary>
    </member>
    <member name="F:GemBox.Email.FreeLimitReachedAction.Stop">
      <summary>
            Stop reading/writing.
            </summary>
    </member>
    <member name="T:GemBox.Email.FreeLimitReachedException">
      <summary>
            Exception that occurs when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Email.IMailMergeDataSource">
      <summary>
            Represents a mail merge data source. By adapting your custom data source to implement this interface, you can use it as a data source in mail merging.
            </summary>
    </member>
    <member name="M:GemBox.Email.IMailMergeDataSource.Contains(System.String)">
      <summary>
            Determines whether data source contains values with specified name.
            </summary>
      <param name="valueName">The value name.</param>
      <returns>
        <see langword="True" /> if values with specified name exist; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Email.IMailMergeDataSource.GetValue(System.String)">
      <summary>
            Gets the value with a name equal to <paramref name="valueName" /> from the current record in data source.
            </summary>
      <param name="valueName">The value name.</param>
      <returns>
        <see langword="True" /> if the current record has a value with a name equal to <paramref name="valueName" />.
            </returns>
    </member>
    <member name="M:GemBox.Email.IMailMergeDataSource.MoveNext">
      <summary>
            Moves to the next record in the data source.
            </summary>
      <returns>
        <see langword="True" /> if next record is available; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Email.LicenseException">
      <summary>
            Represents an exception which is thrown when there is a problem with license key.
            </summary>
    </member>
    <member name="T:GemBox.Email.MailAddress">
      <summary>
            Represents MIME mail (mailbox) address.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailAddress.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailAddress" /> class with specified address.
            </summary>
      <param name="address">The address.</param>
    </member>
    <member name="M:GemBox.Email.MailAddress.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailAddress" /> class with specified address and display name.
            </summary>
      <param name="address">The address.</param>
      <param name="displayName">The display name.</param>
    </member>
    <member name="P:GemBox.Email.MailAddress.Address">
      <summary>
            Gets or sets the address.
            </summary>
      <exception cref="T:System.ArgumentException">
            Address is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.MailAddress.DisplayName">
      <summary>
            Gets or sets the display name.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailAddress.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.MailAddress.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:GemBox.Email.MailAddress.Host">
      <summary>
            Gets the host part of address.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailAddress.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:GemBox.Email.MailAddress.User">
      <summary>
            Gets the user part of address.
            </summary>
    </member>
    <member name="T:GemBox.Email.MailAddressCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Email.MailAddress" /> elements.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailAddressCollection.Add(GemBox.Email.MailAddress[])">
      <summary>
            Adds the specified collection of addresses.
            </summary>
      <param name="items">The collection whose elements will be added to the end of this <see cref="T:GemBox.Email.MailAddressCollection" />.</param>
    </member>
    <member name="M:GemBox.Email.MailAddressCollection.Add(System.Collections.Generic.IEnumerable{GemBox.Email.MailAddress})">
      <summary>
            Adds the specified collection of addresses.
            </summary>
      <param name="items">The collection whose elements will be added to the end of this <see cref="T:GemBox.Email.MailAddressCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">items</exception>
    </member>
    <member name="M:GemBox.Email.MailAddressCollection.Contains(System.String)">
      <summary>
            Determines whether the collection contains the specified mail address.
            </summary>
      <param name="address">The mail address to search for.</param>
      <returns>
        <c>True</c> if collection contains the specified mail address; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentException">
            Address is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailAddressCollection.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:GemBox.Email.MailAddressValidationStatus">
      <summary>
            An enumeration of mail address validation statuses.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.Ok">
      <summary>
            Mail address is valid.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.InvalidFormat">
      <summary>
            Invalid mail address format.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.InvalidHost">
      <summary>
            Mail address host (domain) doesn't exist.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.ServerConnectionError">
      <summary>
            Connection to mail server failed.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.ServerTemporarilyUnavailable">
      <summary>
            The mail server is temporarily unavailable. Try again later.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.ServerError">
      <summary>
            Server processing error.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailAddressValidationStatus.InvalidAddress">
      <summary>
            Mail address doesn't exist.
            </summary>
    </member>
    <member name="T:GemBox.Email.MailAddressValidator">
      <summary>
            Contains static methods for mail address validation.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailAddressValidator.Validate(GemBox.Email.MailAddress)">
      <summary>
            Validates the specified mail address.
            </summary>
      <param name="address">The mail address.</param>
      <returns>
            A <see cref="T:GemBox.Email.MailAddressValidationStatus" /> value, representing the result of validation.
            </returns>
    </member>
    <member name="M:GemBox.Email.MailAddressValidator.Validate(System.Collections.Generic.IEnumerable{GemBox.Email.MailAddress})">
      <summary>
            Validates the collection of mail addresses.
            </summary>
      <param name="addresses">The collection of mail addresses.</param>
      <returns>
            A read-only list of <see cref="T:GemBox.Email.MailAddressValidationStatus" /> values, representing the results of validation.
            </returns>
    </member>
    <member name="M:GemBox.Email.MailAddressValidator.Validate(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Validates the collection of mail addresses.
            </summary>
      <param name="addresses">The collection of mail addresses.</param>
      <returns>
            A read-only list of <see cref="T:GemBox.Email.MailAddressValidationStatus" /> values, representing the results of validation.
            </returns>
    </member>
    <member name="M:GemBox.Email.MailAddressValidator.Validate(System.String)">
      <summary>
            Validates the specified mail address.
            </summary>
      <param name="address">The mail address.</param>
      <returns>
            A <see cref="T:GemBox.Email.MailAddressValidationStatus" /> value, representing the result of validation.
            </returns>
    </member>
    <member name="T:GemBox.Email.MailMerge">
      <summary>
            Contains methods for mail merge; creating multiple messages based on a template message and variable data.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMerge.Merge(GemBox.Email.MailMessage,GemBox.Email.IMailMergeDataSource)">
      <summary>
            Generates a collection of mail messages based on the specified template and populated with provided data.
            </summary>
      <param name="template">The template mail message.</param>
      <param name="dataSource">The data source.</param>
      <returns>
            A read-only collection of mail messages based on the specified template and populated with provided data.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Template is null
            or
            Data source is null
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMerge.Merge``1(GemBox.Email.MailMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Generates a collection of mail messages based on the specified template and populated with provided data.
            </summary>
      <param name="template">The template mail message.</param>
      <param name="items">The generic list of objects used as data source.</param>
      <typeparam name="T">The type of data elements in the collection.</typeparam>
      <returns>
            A read-only collection of mail messages based on the specified template and populated with provided data.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Template is null
            or
            Data source is null
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMerge.Merge(GemBox.Email.MailMessage,System.Data.DataTable)">
      <summary>
            Generates a collection of mail messages based on the specified template and populated with provided data.
            </summary>
      <param name="template">The template mail message.</param>
      <param name="data">The data source.</param>
      <returns>
            A read-only collection of mail messages based on the specified template and populated with provided data.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Template is null
            or
            Data source is null
            </exception>
    </member>
    <member name="T:GemBox.Email.MailMessage">
      <summary>
            Represents an email message.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessage.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessage" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessage.#ctor(GemBox.Email.MailAddress)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessage" /> class with specified sender.
            </summary>
      <param name="from">The sender address.</param>
    </member>
    <member name="M:GemBox.Email.MailMessage.#ctor(GemBox.Email.MailAddress,GemBox.Email.MailAddress[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessage" /> class with specified sender and recipient addresses.
            </summary>
      <param name="from">The sender address.</param>
      <param name="to">The recipient addresses.</param>
    </member>
    <member name="M:GemBox.Email.MailMessage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessage" /> class with specified sender.
            </summary>
      <param name="from">The sender address.</param>
    </member>
    <member name="M:GemBox.Email.MailMessage.#ctor(System.String,System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessage" /> class with specified sender and recipient addresses.
            </summary>
      <param name="from">The sender address.</param>
      <param name="to">The recipient addresses.</param>
    </member>
    <member name="P:GemBox.Email.MailMessage.Attachments">
      <summary>
            Gets the attachments collection.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.Bcc">
      <summary>
            Gets the 'Bcc' address collection.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.BodyHtml">
      <summary>
            Gets or sets the message HTML body.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.BodyText">
      <summary>
            Gets or sets the message text body.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.BodyTextCharset">
      <summary>
            Gets or sets the message text body charset.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.Calendars">
      <summary>
            Gets the calendars collection. Changes made to calendars retrieved through this property
            will NOT be synchronized with <see cref="T:GemBox.Email.MailMessage" />.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.Cc">
      <summary>
            Gets the 'Cc' address collection.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessage.Clone">
      <summary>
            Creates the copy of this <see cref="T:GemBox.Email.MailMessage" /> instance.
            </summary>
      <returns>
            The copy of this <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Email.MailMessage.Date">
      <summary>
            Gets or sets the message date.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.From">
      <summary>
            Gets the 'From' address collection.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.Id">
      <summary>
            Gets or sets the message id.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessage.Load(System.IO.Stream,GemBox.Email.MailMessageFormat)">
      <summary>
            Loads the message from the specified stream.
            </summary>
      <param name="stream">The stream from which the message will be loaded.</param>
      <param name="format">The message format.</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessage.Load(System.String)">
      <summary>
            Loads the message from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessage.Load(System.String,GemBox.Email.MailMessageFormat)">
      <summary>
            Loads the message from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="format">The message format.</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.MailMessage.MimeEntity">
      <summary>
            Gets the underlying MIME entity.
            </summary>
      <exception cref="T:System.ArgumentNullException">value</exception>
    </member>
    <member name="P:GemBox.Email.MailMessage.ReplyTo">
      <summary>
            Gets the 'Reply-To' address collection.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessage.Save(System.IO.Stream,GemBox.Email.MailMessageFormat)">
      <summary>
            Saves the message to a stream.
            </summary>
      <param name="stream">The stream to save the message to.</param>
      <param name="format">The message format.</param>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessage.Save(System.String)">
      <summary>
            Saves the message to a file.
            </summary>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessage.Save(System.String,GemBox.Email.MailMessageFormat)">
      <summary>
            Saves the message to a file.
            </summary>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <param name="format">The message format.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.MailMessage.Sender">
      <summary>
            Gets or sets the sender address
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.Subject">
      <summary>
            Gets or sets the message subject.
            </summary>
    </member>
    <member name="P:GemBox.Email.MailMessage.To">
      <summary>
            Gets the 'To' address collection.
            </summary>
    </member>
    <member name="T:GemBox.Email.MailMessageCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Email.MailMessage" /> elements.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessageCollection" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.#ctor(System.Collections.Generic.IList{GemBox.Email.MailMessage})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.MailMessageCollection" /> class from a list of mail messages.
            </summary>
      <param name="list">List of mail messages</param>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.LazyLoad(System.IO.Stream,GemBox.Email.MailMessageFormat)">
      <summary>
            Lazily yields all messages from the specified file.
            </summary>
      <param name="stream">The stream from which the messages will be loaded.</param>
      <param name="format">The message collection format.</param>
      <returns>
            IEnumerable of <see cref="T:GemBox.Email.MailMessage" /></returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message collection format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.LazyLoad(System.String)">
      <summary>
            Lazily yields all messages from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <returns>
            IEnumerable of <see cref="T:GemBox.Email.MailMessage" /></returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.LazyLoad(System.String,GemBox.Email.MailMessageFormat)">
      <summary>
            Lazily yields all messages from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="format">The message collection format.</param>
      <returns>
            IEnumerable of <see cref="T:GemBox.Email.MailMessage" /></returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message collection format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Load(System.IO.Stream,GemBox.Email.MailMessageFormat)">
      <summary>
            Loads the collection of all messages from the specified stream.
            </summary>
      <param name="stream">The stream from which the message collection will be loaded.</param>
      <param name="format">The message collection format.</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessageCollection" /> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message collection format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Load(System.IO.Stream,GemBox.Email.MailMessageFormat,System.Int32)">
      <summary>
            Loads the message at the specific position from the specified stream.
            </summary>
      <param name="stream">The stream from which the message will be loaded.</param>
      <param name="format">The message collection format.</param>
      <param name="index">Position of the message to be loaded, indexed from zero</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message format.
            </exception>
      <exception cref="T:System.IndexOutOfRangeException">
            Message with a given index was not found.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Load(System.String)">
      <summary>
            Loads the collection of all messages from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessageCollection" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Load(System.String,GemBox.Email.MailMessageFormat)">
      <summary>
            Loads the collection of all messages from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="format">The message collection format.</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessageCollection" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Load(System.String,GemBox.Email.MailMessageFormat,System.Int32)">
      <summary>
            Loads the message at the specific position from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="format">The message collection format.</param>
      <param name="index">Position of the message to be loaded, indexed from zero</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
      <exception cref="T:System.IndexOutOfRangeException">
            Message with a given index was not found.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Load(System.String,System.Int32)">
      <summary>
            Loads the message at the specific position from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="index">Position of the message to be loaded, indexed from zero</param>
      <returns>
        <see cref="T:GemBox.Email.MailMessage" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
      <exception cref="T:System.IndexOutOfRangeException">
            Message with a given index was not found.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.LoadHeaders(System.IO.Stream,GemBox.Email.MailMessageFormat)">
      <summary>
            Loads <see cref="T:GemBox.Email.Mime.HeaderCollection" /> for each message from the specified stream. 
            </summary>
      <param name="stream">The stream from which the <see cref="T:System.Collections.Generic.List`1" /> will be loaded.</param>
      <param name="format">The message collection format.</param>
      <returns>
            List of <see cref="T:GemBox.Email.Mime.HeaderCollection" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown message collection format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.LoadHeaders(System.String)">
      <summary>
            Loads <see cref="T:GemBox.Email.Mime.HeaderCollection" /> for each message from the specified file. 
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <returns>
            List of <see cref="T:GemBox.Email.Mime.HeaderCollection" />.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.LoadHeaders(System.String,GemBox.Email.MailMessageFormat)">
      <summary>
            Loads <see cref="T:GemBox.Email.Mime.HeaderCollection" /> for each message from the specified file. 
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="format">The message collection format.</param>
      <returns>
            List of <see cref="T:GemBox.Email.Mime.HeaderCollection" />.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Save(System.IO.Stream,GemBox.Email.MailMessageFormat)">
      <summary>
            Saves the message collection to a stream.
            </summary>
      <param name="stream">The stream to save the message collection to.</param>
      <param name="format">The message collection format.</param>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unsupported message collection format.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Save(System.String)">
      <summary>
            Saves the message collection to a file.
            </summary>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.MailMessageCollection.Save(System.String,GemBox.Email.MailMessageFormat)">
      <summary>
            Saves the message collection to a file.
            </summary>
      <param name="filePath">A relative or absolute path for the file where message collection will be saved.</param>
      <param name="format">The message collection format.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="T:GemBox.Email.MailMessageFormat">
      <summary>
            An enumeration of supported <see cref="T:GemBox.Email.MailMessage" /> formats.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailMessageFormat.Eml">
      <summary>
            The MIME file format.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailMessageFormat.Mhtml">
      <summary>
            The MHTML file format.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailMessageFormat.Msg">
      <summary>
            The Microsoft Outloook message format.
            </summary>
    </member>
    <member name="F:GemBox.Email.MailMessageFormat.Mbox">
      <summary>
            The Mbox file format.
            </summary>
    </member>
    <member name="T:GemBox.Email.TerminatedEventArgs">
      <summary>
            Provides data for the <see cref="E:GemBox.Email.Pop.PopClient.Terminated" />, <see cref="E:GemBox.Email.Imap.ImapClient.Terminated" /> and <see cref="E:GemBox.Email.Smtp.SmtpClient.Terminated" /> events.
            </summary>
    </member>
    <member name="P:GemBox.Email.TerminatedEventArgs.Exception">
      <summary>
            Gets the client exception.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.Calendar">
      <summary>
            Represents a calendar
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Calendar.Calendar" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Calendar.Events">
      <summary>
            List of all events
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.Load(System.IO.Stream,GemBox.Email.Calendar.CalendarFormat)">
      <summary>
            Loads the calendar from the specified stream.
            </summary>
      <param name="stream">The stream from which the calendar will be loaded.</param>
      <param name="format">The calendar format.</param>
      <returns>
        <see cref="T:GemBox.Email.Calendar.Calendar" /> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown calendar format.
            </exception>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.Load(System.String)">
      <summary>
            Loads the calendar from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <returns>
        <see cref="T:GemBox.Email.Calendar.Calendar" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.Load(System.String,GemBox.Email.Calendar.CalendarFormat)">
      <summary>
            Loads the message from the specified file.
            </summary>
      <param name="filePath">A relative or absolute path to the file.</param>
      <param name="format">The calendar format.</param>
      <returns>
        <see cref="T:GemBox.Email.Calendar.Calendar" /> instance.
            </returns>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Calendar.Calendar.Method">
      <summary>
            Gets or sets the calendar method.
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.Save(System.IO.Stream,GemBox.Email.Calendar.CalendarFormat)">
      <summary>
            Saves the calendar to a stream.
            </summary>
      <param name="stream">The stream to save the calendar to.</param>
      <param name="format">The message format.</param>
      <exception cref="T:System.ArgumentNullException">
            Stream is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Unknown calendar format.
            </exception>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.Save(System.String)">
      <summary>
            Saves the calendar to a file.
            </summary>
      <param name="filePath">A relative or absolute path for the file where calendar will be saved.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Calendar.Calendar.Save(System.String,GemBox.Email.Calendar.CalendarFormat)">
      <summary>
            Saves the calendar to a file.
            </summary>
      <param name="filePath">A relative or absolute path for the file where calendar will be saved.</param>
      <param name="format">The calendar format.</param>
      <exception cref="T:System.ArgumentException">
            File path is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Calendar.Calendar.Tasks">
      <summary>
            List of all Tasks
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.CalendarCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Email.Calendar.Calendar" /> elements.
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.Add(GemBox.Email.Calendar.Calendar)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.Contains(GemBox.Email.Calendar.Calendar)">
      <summary>
            Determines whether this <see cref="T:GemBox.Email.Calendar.CalendarCollection" /> contains the specified <see cref="T:GemBox.Email.Calendar.Calendar" /> item.
            Returns true even if item has changed and is not synchronized with this <see cref="T:GemBox.Email.Calendar.CalendarCollection" />.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Calendar.Calendar" /> item.</param>
      <returns>
        <c>True</c> if <see cref="T:GemBox.Email.Calendar.Calendar" /> item is found; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.CopyTo(GemBox.Email.Calendar.Calendar[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:GemBox.Email.Calendar.CalendarCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:GemBox.Email.Calendar.CalendarCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.Remove(GemBox.Email.Calendar.Calendar)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:GemBox.Email.Calendar.CalendarCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:GemBox.Email.Calendar.CalendarFormat">
      <summary>
            An enumeration of supported <see cref="T:GemBox.Email.Calendar.Calendar" /> formats.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarFormat.Ical">
      <summary>
            The iCalendar format.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.CalendarMethod">
      <summary>
            An enumeration of possible calendar methods that specify what the calendar is used for.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Publish">
      <summary>
            The calendar is used to publish its events and tasks.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Request">
      <summary>
            The calendar is used to represent a request, for example, an invitation to an event.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Reply">
      <summary>
            The calendar is used to respond to a request.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Add">
      <summary>
            The calendar is used by the organizer to add additional information to existing events or tasks.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Cancel">
      <summary>
            The calendar is used by the organizer to send a cancellation notice of an existing 
            event request to the affected attendees.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Refresh">
      <summary>
            The calendar is used as a request to refresh calendar information.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Counter">
      <summary>
            The calendar is used by an attendee as a counterproposal to the event or task.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Declinecounter">
      <summary>
            The calendar is used by the organizer of an event to reject a counterproposal 
            submitted by an attendee.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.CalendarMethod.Unspecified">
      <summary>
            A calendar method is not specified, therefore a calendar object
            is used to transport a snapshot of the calendar information.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.Event">
      <summary>
            Represents a calendar event.
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.Event.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Calendar.Event" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Attendees">
      <summary>
            Gets the attendees.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Categories">
      <summary>
            Gets the categories.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Description">
      <summary>
            Gets or sets the description.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.End">
      <summary>
            Gets or sets the end.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Location">
      <summary>
            Gets or sets the location.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Name">
      <summary>
            Gets or sets the name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Organizer">
      <summary>
            Gets or sets the organizer.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Reminders">
      <summary>
            Gets the reminders.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Repeat">
      <summary>
            Gets or sets the frequency.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.RepeatUntil">
      <summary>
            Gets or sets the repeat deadline.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Start">
      <summary>
            Gets or sets the start.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Event.Status">
      <summary>
            Gets or sets the status.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.EventStatus">
      <summary>
            An enumeration of possible <see cref="T:GemBox.Email.Calendar.Event" /> statuses.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.EventStatus.Unspecified">
      <summary>
            The status of the event was not specified.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.EventStatus.Tentative">
      <summary>
            The event is tentative or provisional.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.EventStatus.Confirmed">
      <summary>
            The event was confirmed.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.EventStatus.Cancelled">
      <summary>
            The event was cancelled.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.Frequency">
      <summary>
            Enumeration of possible frequencies of repetition.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.Frequency.Never">
      <summary>
        <see cref="T:GemBox.Email.Calendar.Event" /> or <see cref="T:GemBox.Email.Calendar.Task" /> will not be repeated.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.Frequency.Daily">
      <summary>
        <see cref="T:GemBox.Email.Calendar.Event" /> or <see cref="T:GemBox.Email.Calendar.Task" /> will be repeated daily.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.Frequency.Weekly">
      <summary>
        <see cref="T:GemBox.Email.Calendar.Event" /> or <see cref="T:GemBox.Email.Calendar.Task" /> will be repeated weekly.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.Frequency.Monthly">
      <summary>
        <see cref="T:GemBox.Email.Calendar.Event" /> or <see cref="T:GemBox.Email.Calendar.Task" /> will be repeated monthly.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.Frequency.Yearly">
      <summary>
        <see cref="T:GemBox.Email.Calendar.Event" /> or <see cref="T:GemBox.Email.Calendar.Task" /> will be repeated yearly.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.Frequency.Unsupported">
      <summary>
            The currently set frequency of <see cref="T:GemBox.Email.Calendar.Event" /> or <see cref="T:GemBox.Email.Calendar.Task" /> is not supported.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.ICalendarItem">
      <summary>
            Represents an item (activity) in a calendar.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Attendees">
      <summary>
            Gets the attendees.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Categories">
      <summary>
            Gets the categories.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Description">
      <summary>
            Gets or sets the description.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.End">
      <summary>
            Gets or sets the end.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Location">
      <summary>
            Gets or sets the location.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Name">
      <summary>
            Gets or sets the name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Organizer">
      <summary>
            Gets or sets the organizer.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Repeat">
      <summary>
            Gets or sets the frequency.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.RepeatUntil">
      <summary>
            Gets or sets the repeat deadline.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.ICalendarItem.Start">
      <summary>
            Gets or sets the start.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.Reminder">
      <summary>
            Represents a reminder of the task or event.
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.Reminder.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Calendar.Reminder" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Reminder.Description">
      <summary>
            Gets or sets the description.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Reminder.Name">
      <summary>
            Gets or sets the name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Reminder.ReminderAction">
      <summary>
            Gets or sets the reminder action.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Reminder.ReminderAttendees">
      <summary>
            Gets the reminder attendees.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Reminder.TriggerBeforeStart">
      <summary>
            Gets or sets the trigger before start.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            TriggerBeforeStart is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Calendar.Reminder.TriggerDate">
      <summary>
            Gets or sets the trigger date.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            TriggerDate is null or empty.
            </exception>
    </member>
    <member name="T:GemBox.Email.Calendar.ReminderAction">
      <summary>
            The enumeration of possible actions executed by <see cref="T:GemBox.Email.Calendar.Reminder" />.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.ReminderAction.Display">
      <summary>
            Reminder will be displayed by the application.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.ReminderAction.Audio">
      <summary>
            Audio will be used by the application as a reminder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.ReminderAction.Email">
      <summary>
            Email will be sent as a reminder.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.ReminderCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Email.Calendar.Reminder" /> elements.
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.Add(GemBox.Email.Calendar.Reminder)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.Contains(GemBox.Email.Calendar.Reminder)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.CopyTo(GemBox.Email.Calendar.Reminder[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:GemBox.Email.Calendar.ReminderCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.IndexOf(GemBox.Email.Calendar.Reminder)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.Insert(System.Int32,GemBox.Email.Calendar.Reminder)">
      <summary>Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="P:GemBox.Email.Calendar.ReminderCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:GemBox.Email.Calendar.ReminderCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.Remove(GemBox.Email.Calendar.Reminder)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="M:GemBox.Email.Calendar.ReminderCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:GemBox.Email.Calendar.Task">
      <summary>
            Represents a calendar task (to-do).
            </summary>
    </member>
    <member name="M:GemBox.Email.Calendar.Task.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Calendar.Task" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Attendees">
      <summary>
            Gets the attendees.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Categories">
      <summary>
            Gets the categories.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Completed">
      <summary>
            Gets or sets the completion date.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Deadline">
      <summary>
            Gets or sets the deadline.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Description">
      <summary>
            Gets or sets the description.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.GemBox#Email#Calendar#ICalendarItem#End">
      <summary>
            Gets or sets the end.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Location">
      <summary>
            Gets or sets the location.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Name">
      <summary>
            Gets or sets the name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Organizer">
      <summary>
            Gets or sets the organizer.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.PercentComplete">
      <summary>
            Gets or sets the percentage.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Priority">
      <summary>
            Gets or sets the priority.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Reminders">
      <summary>
            Gets the reminders.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Repeat">
      <summary>
            Gets or sets the frequency.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.RepeatUntil">
      <summary>
            Gets or sets the repeat deadline.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Start">
      <summary>
            Gets or sets the start.
            </summary>
    </member>
    <member name="P:GemBox.Email.Calendar.Task.Status">
      <summary>
            Gets or sets the status.
            </summary>
    </member>
    <member name="T:GemBox.Email.Calendar.TaskStatus">
      <summary>
            An enumeration of possible <see cref="T:GemBox.Email.Calendar.Task" /> statuses.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.TaskStatus.Unspecified">
      <summary>
            The status of the task was not specified.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.TaskStatus.NeedsAction">
      <summary>
            The task requires an action.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.TaskStatus.Completed">
      <summary>
            The task was completed.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.TaskStatus.InProcess">
      <summary>
            The task is in process of being completed.
            </summary>
    </member>
    <member name="F:GemBox.Email.Calendar.TaskStatus.Cancelled">
      <summary>
            The task was cancelled.
            </summary>
    </member>
    <member name="T:GemBox.Email.Imap.ImapAuthentication">
      <summary>
            An enumeration of supported IMAP authentication mechanisms.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapAuthentication.Native">
      <summary>
            Native IMAP authentication mechanism using LOGIN command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapAuthentication.Login">
      <summary>
            SASL LOGIN mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapAuthentication.Plain">
      <summary>
            SASL PLAIN mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapAuthentication.DigestMd5">
      <summary>
            SASL DIGEST-MD5 mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapAuthentication.CramMd5">
      <summary>
            SASL CRAM-MD5 mechanism.
            </summary>
    </member>
    <member name="T:GemBox.Email.Imap.ImapCapability">
      <summary>
            An enumeration of IMAP server capabilities.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.Imap4">
      <summary>
            The server supports IMAP v4 specification.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.Imap4rev1">
      <summary>
            The server supports IMAP v4 rev1 specification.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.StartTls">
      <summary>
            The server supports STARTTLS command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.LoginDisabled">
      <summary>
            The server doesn't support native LOGIN authentication mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.Authenticate">
      <summary>
            The server supports SASL authentication mechanisms.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.Children">
      <summary>
            The server supports CHILDREN extension defined in <a href="http://tools.ietf.org/html/rfc3348">RFC 3348</a>.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.Idle">
      <summary>
            The server supports IDLE command defined in <a href="http://tools.ietf.org/html/rfc2177">RFC 2177</a>.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapCapability.Move">
      <summary>
            The server supports MOVE command defined in <a href="http://tools.ietf.org/html/rfc6851">RFC 6851</a>.
            </summary>
    </member>
    <member name="T:GemBox.Email.Imap.ImapClient">
      <summary>
            Represents mail client that can be used for manipulating folders and retrieving messages using Internet Mail Access Protocol (IMAP).
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.#ctor(System.String)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Imap.ImapClient" /> class with specified host address.
            </summary>
      <param name="host">The address of the server.</param>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.#ctor(System.String,GemBox.Email.Security.ConnectionSecurity,System.Boolean)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Imap.ImapClient" /> class with specified host address, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and option to ignore SSL certificate errors.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="security">A constant that determines connection security level.</param>
      <param name="acceptAnyCertificate">
        <c>True</c> to ignore any SSL certificate errors; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Imap.ImapClient" /> class with specified host address and option to ignore SSL certificate errors.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="acceptAnyCertificate">
        <c>True</c> to ignore any SSL certificate errors; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.#ctor(System.String,System.Int32,GemBox.Email.Security.ConnectionSecurity,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Imap.ImapClient" /> class with specified host address and port, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and host certificate validation delegate method.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="port">An integer value between 1 and 65535 indicating remote server IP port. Value 0 indicates that client will use default port value for specified connection security level.</param>
      <param name="security">A constant that determines connection security level.</param>
      <param name="certificateValidationCallback">A delegate method for validating server SSL certificate on successful connection.</param>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.AddMessageFlags(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="flags">A collection of flags to add.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.AddMessageFlags(System.Int32,System.String[])">
      <summary>
            Adds the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="flags">A collection of flags to add.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.AddMessageFlags(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <param name="flags">A collection of flags to add.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.AddMessageFlags(System.String,System.String[])">
      <summary>
            Adds the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <param name="flags">A collection of flags to add.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.AddMessageRangeFlags(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the flags to specified range of messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="flags">A collection of flags to add.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.AddMessageRangeFlags(System.Int32,System.Int32,System.String[])">
      <summary>
            Adds the flags to specified range of messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="flags">A collection of flags to add.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.Authenticate(System.String,System.String)">
      <summary>
            Authenticates client with specified user name and password.
            </summary>
      <param name="userName">The user name.</param>
      <param name="password">The password for the user name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected 
            or 
            Client is already authenticated.</exception>
      <exception cref="T:System.ArgumentException">
            Specified user name is null or empty
            or
            Specified password is null or empty.</exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.Authenticate(System.String,System.String,GemBox.Email.Imap.ImapAuthentication)">
      <summary>
            Authenticates client with specified user name, password and <see cref="T:GemBox.Email.Imap.ImapAuthentication" /> mechanism.
            </summary>
      <param name="userName">The user name.</param>
      <param name="password">The password for the user name.</param>
      <param name="authentication">A constant that specifies which authentication mechanism to use.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected 
            or 
            Client is already authenticated.
            </exception>
      <exception cref="T:System.ArgumentException">
            Specified authentication mechanism is not supported
            or 
            Specified user name is null or empty
            or
            Specified password is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.CloseSelectedFolder">
      <summary>
            Closes the currently selected folder.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.Connect">
      <summary>
            Connects to the server.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Using <see cref="F:GemBox.Email.Security.ConnectionSecurity.StartTls" /> for the server which doesn't support it
            or
            Client is already connected.
            </exception>
      <exception cref="T:System.TimeoutException">
            The server failed to respond in given time.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.CreateFolder(System.String)">
      <summary>
            Creates new folder with specified name.
            </summary>
      <param name="name">The full folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Folder name is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.DeleteFolder(System.String)">
      <summary>
            Deletes the specified folder.
            </summary>
      <param name="name">The full folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Folder name is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.DeleteMessage(System.Int32,System.Boolean)">
      <summary>
            Deletes the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="expunge">
        <c>True</c> to delete message immediately from the server; otherwise, <c>false</c>.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.DeleteMessage(System.String,System.Boolean)">
      <summary>
            Deletes the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <param name="expunge">
        <c>True</c> to delete message immediately from the server; otherwise, <c>false</c>.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error. 
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.DeleteMessageRange(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes the specified messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="expunge">
        <c>True</c> to delete message immediately from the server; otherwise, <c>false</c>.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.Disconnect">
      <summary>
            Disconnects client from the server.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.Dispose">
      <summary>
            Disconnects client from the server and disposes all used resources.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.Expunge">
      <summary>
            Expunges the selected folder.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetFolderStatus(System.String)">
      <summary>
            Gets the status of specified folder.
            </summary>
      <param name="name">The full folder name.</param>
      <returns>
            The status of specified folder.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Folder name is null or empty.
            </exception>
      <exception cref="T:System.FormatException">
            Server returned invalid response.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetHeaders(System.Int32)">
      <summary>
            Gets the headers for the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <returns>
            A collection of message headers.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetHeaders(System.String)">
      <summary>
            Gets the headers for the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <returns>
            A collection of message headers.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or 
            UID operations are not supported.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetMessage(System.Int32)">
      <summary>
            Gets the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <returns>
            The specified message.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetMessage(System.String)">
      <summary>
            Gets the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <returns>
            The specified message.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetMessageFlags(System.Int32)">
      <summary>
            Gets the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <returns>
            A read-only collection of message flags.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetMessageFlags(System.String)">
      <summary>
            Gets the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <returns>
            A read-only collection of message flags.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported 
            or 
            Invalid message id
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.GetMessageRange(System.Int32,System.Int32)">
      <summary>
            Gets the collection of specified messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <returns>
            A read-only collection of specified messages.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.Host">
      <summary>
            Gets the server address.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.IdleDisable">
      <summary>
            Disables IDLE mode.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.IdleEnable">
      <summary>
            Enables IDLE mode with the refresh interval set to 29 minutes.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.IdleEnable(System.Int32)">
      <summary>
            Enables IDLE mode with the specified refresh interval.
            </summary>
      <param name="refreshInterval">The refresh interval in minutes.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support IDLE command.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.IdleEnabled">
      <summary>
            Gets whether or not IDLE mode is enabled.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.IsAuthenticated">
      <summary>
            Gets whether or not client is authenticated.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.IsConnected">
      <summary>
            Gets whether or not client is connected to remote server.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.KeepAlive">
      <summary>
            Executes NOOP command.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.ListFolders">
      <summary>
            Lists all folders on the server.
            </summary>
      <returns>
            A read-only collection of all folders on the server.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.ListMessages">
      <summary>
            Lists all messages in the selected folder.
            </summary>
      <returns>
            A read-only collection of all messages in the selected folder. If folder is empty, returns an empty collection.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.ListMessages(System.Int32,System.Int32)">
      <summary>
            Lists specified range of messages in the selected folder.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <returns>
            A read-only collection of specified messages in the selected folder.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.ListSubscribedFolders">
      <summary>
            Lists all subscribed folders on the server.
            </summary>
      <returns>
            A read-only collection of all subscribed folders on the server.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.LogOutput">
      <summary>
            Gets or sets the log output writer.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.MoveMessage(System.Int32,System.String)">
      <summary>
            Moves the specified message to another folder.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="destinationFolder">The destination folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Destination folder is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.MoveMessage(System.String,System.String)">
      <summary>
            Moves the specified message to another folder.
            </summary>
      <param name="uid">The message id.</param>
      <param name="destinationFolder">The destination folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Destination folder is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.MoveMessageRange(System.Int32,System.Int32,System.String)">
      <summary>
            Moves the specified range of messages to another folder.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="destinationFolder">The destination folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentException">
            Destination folder is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.Port">
      <summary>
            Gets the server IP port.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.ReadTimeout">
      <summary>
            Gets or sets the read timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RemoveMessageFlags(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Removes the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="flags">A collection of flags to remove.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RemoveMessageFlags(System.Int32,System.String[])">
      <summary>
            Removes the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="flags">A collection of flags to remove.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RemoveMessageFlags(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Removes the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <param name="flags">A collection of flags to remove.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RemoveMessageFlags(System.String,System.String[])">
      <summary>
            Removes the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <param name="flags">A collection of flags to remove.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RemoveMessageRangeFlags(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Removes the flags from specified range of messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="flags">A collection of flags to remove.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RemoveMessageRangeFlags(System.Int32,System.Int32,System.String[])">
      <summary>
            Removes the flags from specified range of messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="flags">A collection of flags to remove.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.RenameFolder(System.String,System.String)">
      <summary>
            Renames the folder.
            </summary>
      <param name="oldName">Current folder full name.</param>
      <param name="newName">New folder full name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Old folder name is null or empty
            or
            New folder name is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SaveMessage(System.Int32,System.IO.Stream)">
      <summary>
            Saves the specified message to a stream.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="output">The stream to save message to.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or 
            Client is not connected
            or 
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Output stream is not writable.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Output stream is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SaveMessage(System.Int32,System.String)">
      <summary>
            Saves the specified message to a file.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SaveMessage(System.String,System.IO.Stream)">
      <summary>
            Saves the specified message to a stream.
            </summary>
      <param name="uid">The message id.</param>
      <param name="output">The stream to save message to.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or 
            Client is not connected
            or 
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            or
            Output stream is not writable.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Output stream is null.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SaveMessage(System.String,System.String)">
      <summary>
            Saves the specified message to a file.
            </summary>
      <param name="uid">The message id.</param>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SearchMessageNumbers(System.String)">
      <summary>
            Searches for messages on the server that match the specified criteria.
            </summary>
      <param name="query">A search criteria string.</param>
      <returns>
            Read-only collection of message numbers that match specified criteria. 
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Query is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SearchMessageUids(System.String)">
      <summary>
            Searches for messages on the server that match the specified criteria.
            </summary>
      <param name="query">A search criteria string.</param>
      <returns>
            Read-only collection of message ids that match specified criteria. 
            </returns>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Query is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.Security">
      <summary>
            Gets the current connection security mode.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.SelectedFolder">
      <summary>
            Gets the currently selected IMAP folder.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SelectFolder(System.String,System.Boolean)">
      <summary>
            Selects the specified folder.
            </summary>
      <param name="name">The full folder name.</param>
      <param name="readOnly">
        <c>True</c> if folder will be selected as read-only; otherwise, <c>false</c>.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SelectInbox">
      <summary>
            Selects INBOX folder.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SetMessageFlags(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Sets the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="flags">A collection of flags to set.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SetMessageFlags(System.Int32,System.String[])">
      <summary>
            Sets the message flags.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="flags">A collection of flags to set.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SetMessageFlags(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Sets the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <param name="flags">A collection of flags to set.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SetMessageFlags(System.String,System.String[])">
      <summary>
            Sets the message flags.
            </summary>
      <param name="uid">The message id.</param>
      <param name="flags">A collection of flags to set.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SetMessageRangeFlags(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Sets the flags to specified range of messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="flags">A collection of flags to set.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SetMessageRangeFlags(System.Int32,System.Int32,System.String[])">
      <summary>
            Sets the flags to specified range of messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <param name="flags">A collection of flags to set.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Flags parameter is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.SubscribeFolder(System.String)">
      <summary>
            Adds specified folder to the subscribed folders list.
            </summary>
      <param name="name">The full folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Folder name is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.SupportedAuthentications">
      <summary>
            Gets collection of supported authentication mechanisms.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.SupportedCapabilities">
      <summary>
            Gets the collection of supported capabilities.
            </summary>
    </member>
    <member name="E:GemBox.Email.Imap.ImapClient.Terminated">
      <summary>
            Occurs when connection with server is terminated.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.UndeleteMessage(System.Int32)">
      <summary>
            Undeletes the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.UndeleteMessage(System.String)">
      <summary>
            Undeletes the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected 
            or 
            UID operations are not supported
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.UndeleteMessageRange(System.Int32,System.Int32)">
      <summary>
            Undeletes the specified messages.
            </summary>
      <param name="startingNumber">First message number.</param>
      <param name="endingNumber">Last message number.</param>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Starting number is out of range
            or
            Ending number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.UndeleteMessages">
      <summary>
            Undeletes all the messages marked for deletion.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            No folder is selected
            or
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Message number is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Email.Imap.ImapClient.UnsubscribeFolder(System.String)">
      <summary>
            Removes specified folder the from subscribed folders list.
            </summary>
      <param name="name">The full folder name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.ArgumentException">
            Folder name is null or empty.
            </exception>
    </member>
    <member name="P:GemBox.Email.Imap.ImapClient.WriteTimeout">
      <summary>
            Gets or sets the write timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="T:GemBox.Email.Imap.ImapFolderFlag">
      <summary>
            An enumeration of IMAP folder flags.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.NoInferiors">
      <summary>
            Folder cannot have any subfolders.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.NoSelect">
      <summary>
            Folder cannot be selected.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Marked">
      <summary>
            Folder has new messages since last time it was selected. 
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Unmarked">
      <summary>
            Folder doesn't have new messages since last time it was selected.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.NonExistent">
      <summary>
            Folder doesn't exist or cannot be used as folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Subscribed">
      <summary>
            Folder is subscribed.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Remote">
      <summary>
            Remote folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.HasChildren">
      <summary>
            Folder has subfolders.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.HasNoChildren">
      <summary>
            Folder doesn't have any subfolders.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Inbox">
      <summary>
            Inbox folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.All">
      <summary>
            All mail folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Archive">
      <summary>
            Archive folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Drafts">
      <summary>
            Drafts folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Flagged">
      <summary>
            Flagged or starred folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Junk">
      <summary>
            Junk or spam folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Sent">
      <summary>
            Sent mail folder.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapFolderFlag.Trash">
      <summary>
            Deleted mail folder.
            </summary>
    </member>
    <member name="T:GemBox.Email.Imap.ImapFolderInfo">
      <summary>
            Provides information about an IMAP folder
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderInfo.Delimiter">
      <summary>
            Gets the folder name delimiter.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderInfo.Flags">
      <summary>
            Gets the folder flags.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderInfo.Name">
      <summary>
            Gets the folder name.
            </summary>
    </member>
    <member name="M:GemBox.Email.Imap.ImapFolderInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:GemBox.Email.Imap.ImapFolderStatus">
      <summary>
            Represents an IMAP folder status.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.Count">
      <summary>
            Gets mail message count for the folder.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.Flags">
      <summary>
            Gets the defined folder flags.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.IsReadOnly">
      <summary>
            Gets a value indicating whether folder is read only.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.Name">
      <summary>
            Gets the folder name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.PermanentFlags">
      <summary>
            Gets the permanent folder flags.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.Recent">
      <summary>
            Gets the number of mail messages with \Recent flag set.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.UidNext">
      <summary>
            Gets the next unique identifier value.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.UidValidity">
      <summary>
            Gets the unique identifier validity value.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapFolderStatus.Unseen">
      <summary>
            Gets the message number of fist unseen mail message in the folder.
            </summary>
    </member>
    <member name="T:GemBox.Email.Imap.ImapMessageFlags">
      <summary>
            Represents the collection of IMAP message flags. 
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Answered">
      <summary>
            The answered message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Deleted">
      <summary>
            The deleted message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Draft">
      <summary>
            The draft message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Flagged">
      <summary>
            The flagged or starred message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Forwarded">
      <summary>
            The forwarded message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.MdnSent">
      <summary>
            The MDN sent message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.NonJunk">
      <summary>
            The non-junk message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Recent">
      <summary>
            The recent message flag.
            </summary>
    </member>
    <member name="F:GemBox.Email.Imap.ImapMessageFlags.Seen">
      <summary>
            The seen message flag.
            </summary>
    </member>
    <member name="T:GemBox.Email.Imap.ImapMessageInfo">
      <summary>
            Provides information about an IMAP mail message.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapMessageInfo.Flags">
      <summary>
            Gets the message flags.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapMessageInfo.Number">
      <summary>
            Gets the message number.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapMessageInfo.Size">
      <summary>
            Gets the message size in bytes.
            </summary>
    </member>
    <member name="P:GemBox.Email.Imap.ImapMessageInfo.Uid">
      <summary>
            Gets the message uid.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.ContentDispositionType">
      <summary>
            An enumeration of Content-Disposition header values.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.ContentDispositionType.Attachment">
      <summary>
            The attachment content disposition type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.ContentDispositionType.Inline">
      <summary>
            The inline content disposition type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.ContentDispositionType.Unknown">
      <summary>
            The unknown content disposition type.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.ContentEntity">
      <summary>
            Represents MIME entity with single body.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.ContentEntity.#ctor(GemBox.Email.Mime.MediaType,System.Byte[],GemBox.Email.Mime.TransferEncodingType,System.Text.Encoding)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.ContentEntity" /> class with specified content type, raw content, transfer encoding and charset.
            </summary>
      <param name="contentType">Content-Type header value.</param>
      <param name="content">The content. Can be null.</param>
      <param name="encoding">The content encoding.</param>
      <param name="charset">The content charset. Can be null.</param>
      <exception cref="T:System.ArgumentException">
            Content type top level type is multipart. 
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Content size exceeds limitation.
            </exception>
    </member>
    <member name="M:GemBox.Email.Mime.ContentEntity.#ctor(GemBox.Email.Mime.MediaType,System.IO.Stream,GemBox.Email.Mime.TransferEncodingType,System.Text.Encoding)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.ContentEntity" /> class with specified content type, raw content, transfer encoding and charset.
            </summary>
      <param name="contentType">Content-Type header value.</param>
      <param name="content">The content. Can be null.</param>
      <param name="encoding">The content encoding.</param>
      <param name="charset">The content charset. Can be null.</param>
      <exception cref="T:System.ArgumentException">
            Content type top level type is multipart. 
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Content size exceeds limitation.
            </exception>
    </member>
    <member name="P:GemBox.Email.Mime.ContentEntity.Charset">
      <summary>
            Gets or sets the content charset.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.ContentEntity.Clone">
      <summary>
            Creates a copy of this <see cref="T:GemBox.Email.Mime.ContentEntity" /> instance.
            </summary>
      <returns>
            The copy of this <see cref="T:GemBox.Email.Mime.ContentEntity" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Email.Mime.ContentEntity.Content">
      <summary>
            Gets the content.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.ContentEntity.Disposition">
      <summary>
            Gets or sets the content disposition.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.ContentEntity.Find(GemBox.Email.Mime.MediaType)">
      <summary>
            Checks if this <see cref="T:GemBox.Email.Mime.ContentEntity" /> content type matches the specified one.
            </summary>
      <param name="contentType">The content type.</param>
      <returns>
            This <see cref="T:GemBox.Email.Mime.ContentEntity" /> if content type matches specified one; otherwise, null.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.ContentEntity.Find(System.String)">
      <summary>
            Checks if this <see cref="T:GemBox.Email.Mime.ContentEntity" /> top level media type matches specified one.
            </summary>
      <param name="topLevelMediaType">The top level media type.</param>
      <returns>
            This <see cref="T:GemBox.Email.Mime.ContentEntity" /> if top level media type matches specified one; otherwise, null.
            </returns>
    </member>
    <member name="P:GemBox.Email.Mime.ContentEntity.IsMultipart">
      <summary>
            Gets a value indicating whether this entity is multipart.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.ContentEntity.TransferEncoding">
      <summary>
            Gets or sets the content transfer encoding.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.Entity">
      <summary>
            Provides the abstract base class for MIME entities.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.Entity.Clone">
      <summary>
            Creates a copy of this <see cref="T:GemBox.Email.Mime.Entity" /> instance.
            </summary>
      <returns>
            The copy of this <see cref="T:GemBox.Email.Mime.Entity" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Email.Mime.Entity.ContentType">
      <summary>
            Gets the Content-Type header value.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.Entity.Find(GemBox.Email.Mime.MediaType)">
      <summary>
            Checks if this <see cref="T:GemBox.Email.Mime.Entity" /> instance or one of its children mathches the specified content type.
            </summary>
      <param name="contentType">The content type.</param>
      <returns>
        <see cref="T:GemBox.Email.Mime.Entity" /> instance whose content type matches specified one; otherwise, null.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.Entity.Find(System.String)">
      <summary>
            Checks if this <see cref="T:GemBox.Email.Mime.Entity" /> instance or one of its children mathches the specified top level media type.
            </summary>
      <param name="topLevelMediaType">The top level media type.</param>
      <returns>
        <see cref="T:GemBox.Email.Mime.Entity" /> instance whose top level media type matches specified one; otherwise, null.
            </returns>
    </member>
    <member name="P:GemBox.Email.Mime.Entity.Headers">
      <summary>
            Gets the <see cref="T:GemBox.Email.Mime.Entity" /> headers.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Entity.IsMultipart">
      <summary>
            Gets a value indicating whether this <see cref="T:GemBox.Email.Mime.Entity" /> is multipart.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Entity.Parent">
      <summary>
            Gets the <see cref="T:GemBox.Email.Mime.Entity" /> parent.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.Header">
      <summary>
            Represents MIME entity header.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.Header.#ctor(GemBox.Email.Mime.HeaderId,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.Header" /> class with specified identifier and body.
            </summary>
      <param name="id">The identifier.</param>
      <param name="body">The body.</param>
    </member>
    <member name="M:GemBox.Email.Mime.Header.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.Header" /> class with specified name and body.
            </summary>
      <param name="name">The name.</param>
      <param name="body">The body.</param>
    </member>
    <member name="P:GemBox.Email.Mime.Header.Body">
      <summary>
            Gets or sets the body.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Header.BodyCharset">
      <summary>
            Gets or sets the body charset.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Header.Id">
      <summary>
            Gets the identifier.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Header.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.Header.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:GemBox.Email.Mime.HeaderCollection">
      <summary>
            Represents a collection of MIME <see cref="T:GemBox.Email.Mime.Header" /> elements.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.HeaderCollection.Contains(GemBox.Email.Mime.HeaderId)">
      <summary>
            Determines whether this <see cref="T:GemBox.Email.Mime.HeaderCollection" /> contains <see cref="T:GemBox.Email.Mime.Header" /> with specified identifier.
            </summary>
      <param name="id">The identifier.</param>
      <returns>
        <c>True</c> if this <see cref="T:GemBox.Email.Mime.HeaderCollection" /> contains the <see cref="T:GemBox.Email.Mime.Header" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.HeaderCollection.IndexOf(GemBox.Email.Mime.HeaderId)">
      <summary>
            Searches for the <see cref="T:GemBox.Email.Mime.Header" /> with specified identifier and returns the zero-based index of the first occurrence within this <see cref="T:GemBox.Email.Mime.HeaderCollection" />.
            </summary>
      <param name="id">The identifier.</param>
      <returns>
            The zero-based index of the first occurrence of <see cref="T:GemBox.Email.Mime.Header" /> within this <see cref="T:GemBox.Email.Mime.HeaderCollection" />, if found; otherwise, –1.
            </returns>
    </member>
    <member name="P:GemBox.Email.Mime.HeaderCollection.Item(GemBox.Email.Mime.HeaderId)">
      <summary>
            Gets the <see cref="T:GemBox.Email.Mime.Header" /> with the specified identifier.
            </summary>
      <param name="id">The identifier.</param>
      <exception cref="T:System.InvalidOperationException">
            Header with the specified identifier doesn't exist.
            </exception>
    </member>
    <member name="P:GemBox.Email.Mime.HeaderCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Email.Mime.Header" /> with the specified name.
            </summary>
      <param name="name">The name.</param>
      <exception cref="T:System.ArgumentException">
            Name is null or empty.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            Header with the specified name doesn't exist.
            </exception>
    </member>
    <member name="M:GemBox.Email.Mime.HeaderCollection.Remove(GemBox.Email.Mime.HeaderId)">
      <summary>
            Removes the <see cref="T:GemBox.Email.Mime.Header" /> with the specified identifier.
            </summary>
      <param name="id">The identifier.</param>
      <returns>
        <c>True</c> if item is successfully removed; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.HeaderCollection.Remove(System.String)">
      <summary>
            Removes the <see cref="T:GemBox.Email.Mime.Header" /> with the specified name.
            </summary>
      <param name="name">The name.</param>
      <returns>
        <c>True</c> if item is successfully removed; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.HeaderCollection.TryGetHeader(GemBox.Email.Mime.HeaderId,GemBox.Email.Mime.Header@)">
      <summary>
            Tries the get a <see cref="T:GemBox.Email.Mime.Header" /> with the specified identifier.
            </summary>
      <param name="id">The identifier.</param>
      <param name="value">When this method returns, contains the <see cref="T:GemBox.Email.Mime.Header" /> with the specified name, if found; otherwise, null.</param>
      <returns>
        <c>True</c> if this <see cref="T:GemBox.Email.Mime.HeaderCollection" /> contains the specified <see cref="T:GemBox.Email.Mime.Header" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.HeaderCollection.TryGetHeader(System.String,GemBox.Email.Mime.Header@)">
      <summary>
            Tries the get a <see cref="T:GemBox.Email.Mime.Header" /> with the specified name.
            </summary>
      <param name="name">The name.</param>
      <param name="value">When this method returns, contains the <see cref="T:GemBox.Email.Mime.Header" /> with the specified name, if found; otherwise, null.</param>
      <returns>
        <c>True</c> if this <see cref="T:GemBox.Email.Mime.HeaderCollection" /> contains the specified <see cref="T:GemBox.Email.Mime.Header" />; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            Name is null or empty.
            </exception>
    </member>
    <member name="T:GemBox.Email.Mime.HeaderId">
      <summary>
            An enumeration of standard MIME header identifiers.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Custom">
      <summary>
            The custom header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Extension">
      <summary>
            The extension header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Version">
      <summary>
            The <c>MIME-Version</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Date">
      <summary>
            The <c>Date</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.From">
      <summary>
            The <c>From</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Sender">
      <summary>
            The <c>Sender</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.To">
      <summary>
            The <c>To</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Cc">
      <summary>
            The <c>Cc</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Bcc">
      <summary>
            The <c>Bcc</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.MessageId">
      <summary>
            The <c>Message-ID</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentDate">
      <summary>
            The <c>Resent-Date</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentFrom">
      <summary>
            The <c>Resent-From</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentSender">
      <summary>
            The <c>Resent-Sender</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentTo">
      <summary>
            The <c>Resent-To</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentCc">
      <summary>
            The <c>Resent-Cc</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentBcc">
      <summary>
            The <c>Resent-Bcc</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ResentMessageId">
      <summary>
            The <c>Resent-Message-ID</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ReplyTo">
      <summary>
            The <c>Reply-To</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.InReplyTo">
      <summary>
            The <c>In-Reply-To</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.References">
      <summary>
            The <c>References</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Subject">
      <summary>
            The <c>Subject</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Comments">
      <summary>
            The <c>Comments</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Keywords">
      <summary>
            The <c>Keywords</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ReturnPath">
      <summary>
            The <c>Return-Path</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.Received">
      <summary>
            The <c>Received</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ContentType">
      <summary>
            The <c>Content-Type</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ContentDisposition">
      <summary>
            The <c>Content-Disposition</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ContentTransferEncoding">
      <summary>
            The <c>Content-Transfer-Encoding</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ContentDescription">
      <summary>
            The <c>Content-Description</c> header.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.HeaderId.ContentId">
      <summary>
            The <c>Content-ID</c> header.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.Headers">
      <summary>
            Contains common header names and methods for extracting header name from <see cref="T:GemBox.Email.Mime.HeaderId" /> and vice versa.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Bcc">
      <summary>
            Gets the 'bcc' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Cc">
      <summary>
            Gets the 'cc' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Comments">
      <summary>
            Gets the 'comments' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ContentDescription">
      <summary>
            Gets the 'content description' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ContentDisposition">
      <summary>
            Gets the 'content disposition' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ContentId">
      <summary>
            Gets the 'content id' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ContentTransferEncoding">
      <summary>
            Gets the 'content transfer encoding' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ContentType">
      <summary>
            Gets the 'content type' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Date">
      <summary>
            Gets the 'date' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.From">
      <summary>
            Gets the 'from' header name.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.Headers.GetId(System.String)">
      <summary>
            Gets the identifier for the specified name.
            </summary>
      <param name="name">The name.</param>
      <returns>
            The identifier for the specified name.
            </returns>
      <exception cref="T:System.ArgumentException">
            Name is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Mime.Headers.GetName(GemBox.Email.Mime.HeaderId)">
      <summary>
            Gets the name for the specified identifier.
            </summary>
      <param name="id">The identifier.</param>
      <returns>
            The name for the specified identifier
            </returns>
      <exception cref="T:System.NotSupportedException">
            Unable to get the name for custom or extension <see cref="T:GemBox.Email.Mime.Header" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            Unknown header identifier.
            </exception>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.InReplyTo">
      <summary>
            Gets the 'in reply to' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Keywords">
      <summary>
            Gets the 'keywords' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.MessageId">
      <summary>
            Gets the 'message id' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Received">
      <summary>
            Gets the 'received' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.References">
      <summary>
            Gets the 'references' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ReplyTo">
      <summary>
            Gets the 'reply to' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentBcc">
      <summary>
            Gets the 'resent bcc' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentCc">
      <summary>
            Gets the 'resent cc' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentDate">
      <summary>
            Gets the 'resent date' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentFrom">
      <summary>
            Gets the 'resent from' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentMessageId">
      <summary>
            Gets the 'resent message id' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentSender">
      <summary>
            Gets the 'resent sender' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ResentTo">
      <summary>
            Gets the 'resent to' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.ReturnPath">
      <summary>
            Gets the 'return path' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Sender">
      <summary>
            Gets the 'sender' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Subject">
      <summary>
            Gets the 'subject' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.To">
      <summary>
            Gets the 'to' header name.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.Headers.Version">
      <summary>
            Gets the 'version' header name.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.MediaType">
      <summary>
            Represents formated MIME media type value.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.MediaType" /> structure with raw value.
            </summary>
      <param name="value">The raw value.</param>
      <exception cref="T:System.ArgumentException">
            Value is null or empty.
            </exception>
      <exception cref="T:System.ArgumentException">
            Input string is in invalid format.
            </exception>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.MediaType" /> structure with specified top level type and subtype.
            </summary>
      <param name="topLevelType">The top level type.</param>
      <param name="subtype">The subtype.</param>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.op_Equality(GemBox.Email.Mime.MediaType,GemBox.Email.Mime.MediaType)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="item1">The item1.</param>
      <param name="item2">The item2.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.op_Implicit(GemBox.Email.Mime.MediaType)~System.String">
      <summary>
            Performs an implicit conversion from <see cref="T:GemBox.Email.Mime.MediaType" /> to <see cref="T:System.String" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.op_Implicit(System.String)~GemBox.Email.Mime.MediaType">
      <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:GemBox.Email.Mime.MediaType" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.op_Inequality(GemBox.Email.Mime.MediaType,GemBox.Email.Mime.MediaType)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="item1">The item1.</param>
      <param name="item2">The item2.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="P:GemBox.Email.Mime.MediaType.Subtype">
      <summary>
            Gets the subtype.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.MediaType.TopLevelType">
      <summary>
            Gets the top level type.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.MediaType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:GemBox.Email.Mime.MediaTypes">
      <summary>
            Contains most commonly used <see cref="T:GemBox.Email.Mime.MediaType" /> values.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationAtom">
      <summary>
            The <b>application/atom+xml</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationDeb">
      <summary>
            The <b>application/x-deb</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationDvi">
      <summary>
            The <b>application/x-dvi</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationEcmaScript">
      <summary>
            The <b>application/ecmascript</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationExcel">
      <summary>
            The <b>application/vnd.ms-excel</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationExcelx">
      <summary>
            The <b>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationFont">
      <summary>
            The <b>application/font-woff</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationFormEncodedData">
      <summary>
            The <b>application/x-www-form-urlencoded</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationGoogleWebToolkit">
      <summary>
            The <b>application/x-gwt-rpc</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationGzip">
      <summary>
            The <b>application/application/x-gzip</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationJavascript">
      <summary>
            The <b>application/javascript</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationJquery">
      <summary>
            The <b>application/x-jquery-tmpl</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationJson">
      <summary>
            The <b>application/json</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationKml">
      <summary>
            The <b>application/vnd.google-earth.kml+xml</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationLatex">
      <summary>
            The <b>application/x-latex</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationOctetStream">
      <summary>
            The <b>application/octet-stream</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationOpenDocumentGraphics">
      <summary>
            The <b>application/vnd.oasis.opendocument.graphics</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationOpenDocumentPresentation">
      <summary>
            The <b>application/vnd.oasis.opendocument.presentation</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationOpenDocumentSpreadsheet">
      <summary>
            The <b>application/vnd.oasis.opendocument.spreadsheet</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationOpenDocumentText">
      <summary>
            The <b>application/application/vnd.oasis.opendocument.text</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationPdf">
      <summary>
            The <b>application/pdf</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationPostscript">
      <summary>
            The <b>application/postscript</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationPowerpoint">
      <summary>
            The <b>application/vnd.ms-powerpoint</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationPowerpointx">
      <summary>
            The <b>application/vnd.openxmlformats-officedocument.presentationml.presentation</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationRar">
      <summary>
            The <b>application/x-rar-compressed</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationRss">
      <summary>
            The <b>application/rss+xml</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationSoap">
      <summary>
            The <b>application/soap+xml</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationStuffit">
      <summary>
            The <b>application/x-stuffit</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationSwf">
      <summary>
            The <b>application/x-shockwave-flash</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationTar">
      <summary>
            The <b>application/x-tar</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationTtf">
      <summary>
            The <b>application/x-font-ttf</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationWord">
      <summary>
            The <b>application/msword</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationWordx">
      <summary>
            The <b>application/vnd.openxmlformats-officedocument.wordprocessingml.document</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationXml">
      <summary>
            The <b>application/xml-dtd</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationXul">
      <summary>
            The <b>application/vnd.mozilla.xul+xml</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ApplicationZip">
      <summary>
            The <b>application/zip</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioBasic">
      <summary>
            The <b>audio/basic</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioMp4">
      <summary>
            The <b>audio/mp4</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioMpeg">
      <summary>
            The <b>audio/mpeg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioOgg">
      <summary>
            The <b>audio/ogg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioPcm">
      <summary>
            The <b>audio/L24</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioRealAudio">
      <summary>
            The <b>audio/vnd.rn-realaudio</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioVorbis">
      <summary>
            The <b>audio/vorbis</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioWav">
      <summary>
            The <b>audio/vnd.wave</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioWax">
      <summary>
            The <b>audio/x-ms-wax</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioWebm">
      <summary>
            The <b>audio/webm</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.AudioWma">
      <summary>
            The <b>audio/x-ms-wma</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImageGif">
      <summary>
            The <b>image/gif</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImageIco">
      <summary>
            The <b>image/vnd.microsoft.icon</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImageJpeg">
      <summary>
            The <b>image/jpeg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImagePjpeg">
      <summary>
            The <b>image/pjpeg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImagePng">
      <summary>
            The <b>image/png</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImageSvg">
      <summary>
            The <b>image/svg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.ImageTiff">
      <summary>
            The <b>image/tiff</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MessagePartial">
      <summary>
            The <b>message/partial</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MessageRfc822">
      <summary>
            The <b>message/rfc822</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartAlternative">
      <summary>
            The <b>multipart/alternative</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartDigest">
      <summary>
            The <b>multipart/digest</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartEncrypted">
      <summary>
            The <b>multipart/encrypted</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartMixed">
      <summary>
            The <b>multipart/mixed</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartParallel">
      <summary>
            The <b>multipart/parallel</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartRelated">
      <summary>
            The <b>multipart/related</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.MultipartSigned">
      <summary>
            The <b>multipart/signed</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextCalendar">
      <summary>
            The <b>text/calendar</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextCmd">
      <summary>
            The <b>text/cmd</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextCss">
      <summary>
            The <b>text/css</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextCsv">
      <summary>
            The <b>text/csv</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextHtml">
      <summary>
            The <b>text/html</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextJavaScript">
      <summary>
            The <b>text/javascript</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextPlain">
      <summary>
            The <b>text/plain</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextVCard">
      <summary>
            The <b>text/vcard</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.TextXml">
      <summary>
            The <b>text/xml</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoMkv">
      <summary>
            The <b>video/x-matroska</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoMp4">
      <summary>
            The <b>video/mp4</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoMpeg">
      <summary>
            The <b>video/mpeg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoOgg">
      <summary>
            The <b>video/ogg</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoQuickTime">
      <summary>
            The <b>video/quicktime</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoWebm">
      <summary>
            The <b>video/webm</b> media type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.MediaTypes.VideoWmv">
      <summary>
            The <b>video/x-ms-wmv</b> media type.
            </summary>
    </member>
    <member name="T:GemBox.Email.Mime.MultipartEntity">
      <summary>
            Represents MIME entity with multiple body parts.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.MultipartEntity" /> class with specified media subtype.
            </summary>
      <param name="mediaSubtype">The media subtype.</param>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.#ctor(System.String,System.Collections.Generic.IEnumerable{GemBox.Email.Mime.Entity})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Email.Mime.MultipartEntity" /> class with specified media subtype and collection of child entities.
            </summary>
      <param name="mediaSubtype">The media subtype.</param>
      <param name="items">The collection of child entities.</param>
      <exception cref="T:System.ArgumentNullException">
            Child collection is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Child collection contains null elements.
            </exception>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Add(GemBox.Email.Mime.Entity)">
      <summary>
            Adds the specified <see cref="T:GemBox.Email.Mime.Entity" /> item.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Mime.Entity" /> item.</param>
    </member>
    <member name="P:GemBox.Email.Mime.MultipartEntity.Boundary">
      <summary>
            Gets or sets the boundary.
            </summary>
      <exception cref="T:System.ArgumentException">
            Boundary is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Clear">
      <summary>
            Removes all the items from this <see cref="T:GemBox.Email.Mime.MultipartEntity" />.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Clone">
      <summary>
            Creates a copy of this <see cref="T:GemBox.Email.Mime.MultipartEntity" /> instance.
            </summary>
      <returns>
            The copy of this <see cref="T:GemBox.Email.Mime.MultipartEntity" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Contains(GemBox.Email.Mime.Entity)">
      <summary>
            Determines whether this <see cref="T:GemBox.Email.Mime.MultipartEntity" /> contains the specified <see cref="T:GemBox.Email.Mime.Entity" /> item.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Mime.Entity" /> item.</param>
      <returns>
        <c>True</c> if <see cref="T:GemBox.Email.Mime.Entity" /> item is found; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.CopyTo(GemBox.Email.Mime.Entity[],System.Int32)">
      <summary>
            Copies this <see cref="T:GemBox.Email.Mime.MultipartEntity" /> or a portion of it to an array.
            </summary>
      <param name="array">The one-dimensional <see cref="T:GemBox.Email.Mime.Entity" /> array that is the destination of the items copied from this <see cref="T:GemBox.Email.Mime.MultipartEntity" />.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:GemBox.Email.Mime.MultipartEntity.Count">
      <summary>
            Gets the count.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.MultipartEntity.Epilogue">
      <summary>
            Gets or sets the entity epilogue.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Find(GemBox.Email.Mime.MediaType)">
      <summary>
            Checks if this <see cref="T:GemBox.Email.Mime.MultipartEntity" /> or any of its children content type matches the specified one.
            </summary>
      <param name="contentType">The content type.</param>
      <returns>
        <see cref="T:GemBox.Email.Mime.MultipartEntity" /> instance whose content type matches specified one; otherwise, null.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Find(System.String)">
      <summary>
            Checks if this <see cref="T:GemBox.Email.Mime.MultipartEntity" /> or any of its children top level media type matches the specified one.
            </summary>
      <param name="topLevelMediaType">The top level media type.</param>
      <returns>
        <see cref="T:GemBox.Email.Mime.MultipartEntity" /> instance whose top level media type matches specified one; otherwise, null.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.IndexOf(GemBox.Email.Mime.Entity)">
      <summary>
            Searches for the specified <see cref="T:GemBox.Email.Mime.Entity" /> item and returns the zero-based index of the first occurrence within this <see cref="T:GemBox.Email.Mime.MultipartEntity" />.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Mime.Entity" /> item.</param>
      <returns>
            The zero-based index of the first occurrence of <see cref="T:GemBox.Email.Mime.Entity" /> item within this <see cref="T:GemBox.Email.Mime.MultipartEntity" />, if found; otherwise, –1.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Insert(System.Int32,GemBox.Email.Mime.Entity)">
      <summary>
            Inserts an <see cref="T:GemBox.Email.Mime.Entity" /> item at the specified index.
            </summary>
      <param name="index">The index.</param>
      <param name="item">The <see cref="T:GemBox.Email.Mime.Entity" /> item.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:GemBox.Email.Mime.Entity" /> item is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            Collection already contains <see cref="T:GemBox.Email.Mime.Entity" /> item.
            </exception>
    </member>
    <member name="P:GemBox.Email.Mime.MultipartEntity.IsMultipart">
      <summary>
            Gets a value indicating whether this entity is multipart.
            </summary>
    </member>
    <member name="P:GemBox.Email.Mime.MultipartEntity.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:GemBox.Email.Mime.Entity" /> at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>
            The <see cref="T:GemBox.Email.Mime.Entity" /> at the specified index.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            value
            </exception>
    </member>
    <member name="P:GemBox.Email.Mime.MultipartEntity.Preamble">
      <summary>
            Gets or sets the entity preamble.
            </summary>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.Remove(GemBox.Email.Mime.Entity)">
      <summary>
            Removes the specified <see cref="T:GemBox.Email.Mime.Entity" /> item.
            </summary>
      <param name="item">The <see cref="T:GemBox.Email.Mime.Entity" /> item.</param>
      <returns>
        <c>True</c> if item is successfully removed; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GemBox.Email.Mime.MultipartEntity.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Email.Mime.Entity" /> item at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Email.Mime.Entity" /> item to remove.</param>
    </member>
    <member name="T:GemBox.Email.Mime.TransferEncodingType">
      <summary>
            An enumeration of MIME transfer encoding types.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.TransferEncodingType.Unknown">
      <summary>
            The unknown encoding type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.TransferEncodingType.SevenBit">
      <summary>
            The seven bit encoding type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.TransferEncodingType.EightBit">
      <summary>
            The eight bit encoding type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.TransferEncodingType.Binary">
      <summary>
            The binary encoding type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.TransferEncodingType.QuotedPrintable">
      <summary>
            The quoted printable encoding type.
            </summary>
    </member>
    <member name="F:GemBox.Email.Mime.TransferEncodingType.Base64">
      <summary>
            The base64 encoding type.
            </summary>
    </member>
    <member name="T:GemBox.Email.Pop.PopAuthentication">
      <summary>
            An enumeration of supported POP authentication mechanisms.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopAuthentication.Native">
      <summary>
            Native POP authentication mechanism using USER and PASS commands.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopAuthentication.Apop">
      <summary>
            Native POP authentication mechanism using APOP command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopAuthentication.Login">
      <summary>
            SASL LOGIN mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopAuthentication.Plain">
      <summary>
            SASL PLAIN mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopAuthentication.DigestMd5">
      <summary>
            SASL DIGEST-MD5 mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopAuthentication.CramMd5">
      <summary>
            SASL CRAM-MD5 mechanism.
            </summary>
    </member>
    <member name="T:GemBox.Email.Pop.PopCapability">
      <summary>
            An enumeration of POP server capabilities.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Apop">
      <summary>
            The server supports APOP authentication mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Expire">
      <summary>
            The server supports EXIPIRE capability as defined in <a href="https://tools.ietf.org/html/rfc2449#section-6.7">RFC 2449 - section 6.7</a></summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Lang">
      <summary>
            The server supports localization of human readable responses.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.LoginDelay">
      <summary>
            The server supports delayed login.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Pipelining">
      <summary>
            The server is capable of accepting multiple commands at a time.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.ResponseCodes">
      <summary>
            The server supports extended response codes.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Sasl">
      <summary>
            Server supports SASL authentication mechanisms.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.StartTls">
      <summary>
            The server supports STARTTLS command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Top">
      <summary>
            The server supports fetching a part of message by using TOP command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Uidl">
      <summary>
            The server supports message ids.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.User">
      <summary>
            The server supports authentication using USER and PASS commands.
            </summary>
    </member>
    <member name="F:GemBox.Email.Pop.PopCapability.Utf8">
      <summary>
            The server supports UTF8 communication encoding.
            </summary>
    </member>
    <member name="T:GemBox.Email.Pop.PopClient">
      <summary>
            Represents mail client that can be used for retreiving messages using Post Office Protocol (POP).
            </summary>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.#ctor(System.String)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Pop.PopClient" /> class with specified host address.
            </summary>
      <param name="host">The address of the server.</param>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.#ctor(System.String,GemBox.Email.Security.ConnectionSecurity,System.Boolean)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Pop.PopClient" /> class with specified host address, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and option to ignore SSL certificate errors.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="security">A constant that determines connection security level.</param>
      <param name="acceptAnyCertificate">
        <c>True</c> to ignore any SSL certificate errors; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Pop.PopClient" /> class with specified host address, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and option to ignore SSL certificate errors.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="acceptAnyCertificate">
        <c>True</c> to ignore any SSL certificate errors; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.#ctor(System.String,System.Int32,GemBox.Email.Security.ConnectionSecurity,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Pop.PopClient" /> class with specified host address and port, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and host certificate validation delegate method.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="port">An integer value between 1 and 65535 indicating remote server IP port. Value 0 indicates that client will use default port value for specified connection security level.</param>
      <param name="security">A constant that determines connection security level.</param>
      <param name="certificateValidationCallback">A delegate method for validating server SSL certificate on successful connection.</param>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.Authenticate(System.String,System.String)">
      <summary>
            Authenticates client with specified user name and password.
            </summary>
      <param name="userName">The user name.</param>
      <param name="password">The password for the user name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected 
            or 
            Client is already authenticated.</exception>
      <exception cref="T:System.ArgumentException">
            Specified user name is null or empty
            or
            Specified password is null or empty.</exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.Authenticate(System.String,System.String,GemBox.Email.Pop.PopAuthentication)">
      <summary>
            Authenticates client with specified user name, password and <see cref="T:GemBox.Email.Pop.PopAuthentication" /> mechanism.
            </summary>
      <param name="userName">The user name.</param>
      <param name="password">The password for the user name.</param>
      <param name="authentication">A constant that specifies which authentication mechanism to use.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected 
            or 
            Client is already authenticated.
            </exception>
      <exception cref="T:System.ArgumentException">
            Specified authentication mechanism is not supported
            or 
            Specified user name is null or empty
            or
            Specified password is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.Connect">
      <summary>
            Connects to the server.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Using <see cref="F:GemBox.Email.Security.ConnectionSecurity.StartTls" /> for the server which doesn't support it
            or
            Client is already connected.
            </exception>
      <exception cref="T:System.TimeoutException">
            The server failed to respond in given time.
            </exception>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.DeleteMessage(System.Int32)">
      <summary>
            Deletes the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or 
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.DeleteMessage(System.String)">
      <summary>
            Deletes the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or 
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support UIDL capability.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.Disconnect(System.Boolean)">
      <summary>
            Disconnects client from the server.
            </summary>
      <param name="update">
        <c>True</c> to update server state; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.Dispose">
      <summary>
            Disconnects client from the server and disposes all used resources.
            </summary>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.GetCount">
      <summary>
            Gets the count of messages available on the server.
            </summary>
      <returns>
            The count of messages available on the server.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.GetHeaders(System.Int32)">
      <summary>
            Gets the headers for the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <returns>
            A collection of message headers.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support TOP capability.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.GetHeaders(System.String)">
      <summary>
            Gets the headers for the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <returns>
            A collection of message headers.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support UIDL capability.
            or
            Server doesn't support TOP capability.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.GetMessage(System.Int32)">
      <summary>
            Gets the specified message.
            </summary>
      <param name="messageNumber">The message number.</param>
      <returns>
            The specified message.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.GetMessage(System.String)">
      <summary>
            Gets the specified message.
            </summary>
      <param name="uid">The message id.</param>
      <returns>
            The specified message.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support UIDL capability.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.GetSize">
      <summary>
            Gets the size of all message available on the server.
            </summary>
      <returns>
            The size of all message available on the server.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.Host">
      <summary>
            Gets the server address.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.IsAuthenticated">
      <summary>
            Gets whether or not client is authenticated.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.IsConnected">
      <summary>
            Gets whether or not client is connected to the server.
            </summary>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.KeepAlive">
      <summary>
            Executes NOOP command.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.ListMessages">
      <summary>
            Lists all available messages on the server.
            </summary>
      <returns>
            A read-only collection of all available messages on the server.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.ListMessages(System.Boolean)">
      <summary>
            Lists all available messages on the server.
            </summary>
      <param name="includeUid">
        <c>True</c> to fetch message ids along with message numbers; otherwise, <c>false</c>.</param>
      <returns>
            A read-only collection of all available messages on the server.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support UIDL capability.
            </exception>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.LogOutput">
      <summary>
            Gets or sets the log output writer.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.Port">
      <summary>
            Gets the server IP port.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.ReadTimeout">
      <summary>
            Gets or sets the read timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.SaveMessage(System.Int32,System.IO.Stream)">
      <summary>
            Saves the specified message to a stream.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="output">The stream to save the message to.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or 
            Server error.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
      <exception cref="T:System.ArgumentException">
            Output stream is not writable.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Output stream is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.SaveMessage(System.Int32,System.String)">
      <summary>
            Saves the specified message to a file.
            </summary>
      <param name="messageNumber">The message number.</param>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.SaveMessage(System.String,System.IO.Stream)">
      <summary>
            Saves the specified message to a stream.
            </summary>
      <param name="uid">The message id.</param>
      <param name="output">The stream to save the message to.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or 
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support UIDL capability.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            or
            Output stream is not writable.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Output stream is null.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.SaveMessage(System.String,System.String)">
      <summary>
            Saves the specified message to a file.
            </summary>
      <param name="uid">The message id.</param>
      <param name="filePath">A relative or absolute path for the file where message will be saved.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:System.NotSupportedException">
            Server doesn't support UIDL capability.
            </exception>
      <exception cref="T:System.ArgumentException">
            Message id is null or empty.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.Security">
      <summary>
            Gets the current connection security mode.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.SupportedAuthentications">
      <summary>
            Gets collection of supported authentication mechanisms.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.SupportedCapabilities">
      <summary>
            Gets the collection of supported capabilities.
            </summary>
    </member>
    <member name="E:GemBox.Email.Pop.PopClient.Terminated">
      <summary>
            Occurs when connection with server is terminated.
            </summary>
    </member>
    <member name="M:GemBox.Email.Pop.PopClient.UndeleteMessages">
      <summary>
            Undeletes all messages.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or 
            Server error.
            </exception>
    </member>
    <member name="P:GemBox.Email.Pop.PopClient.WriteTimeout">
      <summary>
            Gets or sets the write timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="T:GemBox.Email.Pop.PopMessageInfo">
      <summary>
            Provides information about a POP mail message.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopMessageInfo.Number">
      <summary>
            Gets the message number.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopMessageInfo.Size">
      <summary>
            Gets the message size in bytes.
            </summary>
    </member>
    <member name="P:GemBox.Email.Pop.PopMessageInfo.Uid">
      <summary>
            Gets the message uid.
            </summary>
    </member>
    <member name="T:GemBox.Email.Security.ConnectionSecurity">
      <summary>
            An enumeration of connection security types.
            </summary>
    </member>
    <member name="F:GemBox.Email.Security.ConnectionSecurity.None">
      <summary>
            Plain TCP connection.
            </summary>
    </member>
    <member name="F:GemBox.Email.Security.ConnectionSecurity.StartTls">
      <summary>
            Plain TCP connection which is encrypted after successful connect. 
            </summary>
    </member>
    <member name="F:GemBox.Email.Security.ConnectionSecurity.Ssl">
      <summary>
            Encrypted connection using Secure Sockets Layer (SSL).
            </summary>
    </member>
    <member name="F:GemBox.Email.Security.ConnectionSecurity.Auto">
      <summary>
            Automatic connection security.
            </summary>
    </member>
    <member name="T:GemBox.Email.Smtp.SmtpAuthentication">
      <summary>
            An enumeration of supported SMTP authentication mechanisms.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpAuthentication.Login">
      <summary>
            SASL LOGIN mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpAuthentication.Plain">
      <summary>
            SASL PLAIN mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpAuthentication.DigestMd5">
      <summary>
            SASL DIGEST-MD5 mechanism.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpAuthentication.CramMd5">
      <summary>
            SASL CRAM-MD5 mechanism.
            </summary>
    </member>
    <member name="T:GemBox.Email.Smtp.SmtpCapability">
      <summary>
            An enumeration of SMTP server capabilites.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.EightBitMime">
      <summary>
            The server supports 8bit MIME encoding.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.Authenticate">
      <summary>
            The server supports SASL authentication mechanisms.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.DeliveryStatusNotification">
      <summary>
            The server supports delivery status notification.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.Help">
      <summary>
            The server supports HELP command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.Pipelining">
      <summary>
            The server is capable of accepting multiple commands at a time.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.Size">
      <summary>
            The maximum message size is limited by the server.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.StartTls">
      <summary>
            The server supports STARTTLS command.
            </summary>
    </member>
    <member name="F:GemBox.Email.Smtp.SmtpCapability.SmtpUtf8">
      <summary>
            The server supports UTF-8 encoding in mail addresses and headers.
            </summary>
    </member>
    <member name="T:GemBox.Email.Smtp.SmtpClient">
      <summary>
            Represents mail client that can be used for sending messages using Simple Mail Transfer Protocol (SMTP).
            </summary>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.#ctor(System.String)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Smtp.SmtpClient" /> class with specified host address.
            </summary>
      <param name="host">The address of the server.</param>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.#ctor(System.String,GemBox.Email.Security.ConnectionSecurity,System.Boolean)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Smtp.SmtpClient" /> class with specified host address, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and option to ignore SSL certificate errors.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="security">A constant that determines connection security level.</param>
      <param name="acceptAnyCertificate">
        <c>True</c> to ignore any SSL certificate errors; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Smtp.SmtpClient" /> class with specified host address, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and option to ignore SSL certificate errors.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="acceptAnyCertificate">
        <c>True</c> to ignore any SSL certificate errors; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.#ctor(System.String,System.Int32,GemBox.Email.Security.ConnectionSecurity,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>
            Initializes new instance of <see cref="T:GemBox.Email.Smtp.SmtpClient" /> class with specified host address and port, <see cref="T:GemBox.Email.Security.ConnectionSecurity" /> option and host certificate validation delegate method.
            </summary>
      <param name="host">The address of the server.</param>
      <param name="port">An integer value between 1 and 65535 indicating remote server IP port. Value 0 indicates that client will use default port value for specified connection security level.</param>
      <param name="security">A constant that determines connection security level.</param>
      <param name="certificateValidationCallback">A delegate method for validating server SSL certificate on successful connection.</param>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.Authenticate(System.String,System.String)">
      <summary>
            Authenticates client with specified user name and password.
            </summary>
      <param name="userName">The user name.</param>
      <param name="password">The password for the user name.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected 
            or 
            Client is already authenticated.</exception>
      <exception cref="T:System.ArgumentException">
            Specified user name is null
            or
            Specified password is null.</exception>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.Authenticate(System.String,System.String,GemBox.Email.Smtp.SmtpAuthentication)">
      <summary>
            Authenticates client with specified user name, password and <see cref="T:GemBox.Email.Smtp.SmtpAuthentication" /> mechanism.
            </summary>
      <param name="userName">The user name.</param>
      <param name="password">The password for the user name.</param>
      <param name="authentication">A constant that specifies which authentication mechanism to use.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected 
            or 
            Client is already authenticated.
            </exception>
      <exception cref="T:System.ArgumentException">
            Specified authentication mechanism is not supported
            or 
            Specified user name is null
            or
            Specified password is null.
            </exception>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.Connect">
      <summary>
            Connects to the server.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Using <see cref="F:GemBox.Email.Security.ConnectionSecurity.StartTls" /> for the server which doesn't support it
            or
            Client is already connected.
            </exception>
      <exception cref="T:System.TimeoutException">
            The server failed to respond in given time.
            </exception>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.Disconnect">
      <summary>
            Disconnects client from the server.
            </summary>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.Dispose">
      <summary>
            Disconnects client from the server and disposes all used resources.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.Host">
      <summary>
            Gets the server address.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.IsAuthenticated">
      <summary>
            Gets whether or not client is authenticated.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.IsConnected">
      <summary>
            Gets whether or not client is connected to the server.
            </summary>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.KeepAlive">
      <summary>
            Executes NOOP command.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.LocalDomain">
      <summary>
            Gets or sets the local domain.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.LogOutput">
      <summary>
            Gets or sets the log output writer.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.Port">
      <summary>
            Gets the server IP port.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.ReadTimeout">
      <summary>
            Gets or sets the read timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.Security">
      <summary>
            Gets the current connection security mode.
            </summary>
    </member>
    <member name="M:GemBox.Email.Smtp.SmtpClient.SendMessage(GemBox.Email.MailMessage)">
      <summary>
            Sends the message.
            </summary>
      <param name="message">The message.</param>
      <exception cref="T:System.InvalidOperationException">
            Client is not connected
            or
            Server error.
            </exception>
      <exception cref="T:GemBox.Email.FreeLimitReachedException">
            Free license limitation exceeded.
            </exception>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.SupportedAuthentications">
      <summary>
            Gets collection of supported authentication mechanisms.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.SupportedCapabilities">
      <summary>
            Gets the collection of supported capabilities.
            </summary>
    </member>
    <member name="E:GemBox.Email.Smtp.SmtpClient.Terminated">
      <summary>
            Occurs when connection with server is terminated.
            </summary>
    </member>
    <member name="P:GemBox.Email.Smtp.SmtpClient.WriteTimeout">
      <summary>
            Gets or sets the write timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            Timeout cannot be set while client is connected.
            </exception>
    </member>
  </members>
</doc>